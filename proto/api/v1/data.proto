syntax = "proto3";

package pumpkin_enterprise.api.v1;

message RawData {
  int64 updated_at = 1;
  bytes data = 2;
}

message DataResponse { optional RawData response = 1; }

message GetAppVersionRequest {}

message GetAlgoConfigDataRequest {}

message GetChipTempsConfigDataRequest {}

message GetHashboardTempsConfigDataRequest {}

message GetModesConfigDataRequest {}

message GetAntminerIdealConfigDataRequest {}
message GetAntminerPowerConfigDataRequest {}

message GetVersionRequest {}

service DataService {
  // Method to get app version
  rpc GetAppVersion(GetAppVersionRequest) returns (DataResponse);
  // Method to get algo config
  rpc GetAlgoConfigData(GetAlgoConfigDataRequest) returns (DataResponse);
  // Method to get chip temps config, data = json
  rpc GetChipTempsConfigData(GetChipTempsConfigDataRequest)
      returns (DataResponse);
  // Method to get hashboard temps config, data = json
  rpc GetHashboardTempsConfigData(GetHashboardTempsConfigDataRequest)
      returns (DataResponse);
  // Method to get modes config, data = json
  rpc GetModesConfigData(GetModesConfigDataRequest) returns (DataResponse);
  // Method to get antminer ideal config, data = json
  rpc GetAntminerIdealConfigData(GetAntminerIdealConfigDataRequest)
      returns (DataResponse);
  // Method to get antminer power config, data = json
  rpc GetAntminerPowerConfigData(GetAntminerPowerConfigDataRequest)
      returns (DataResponse);
}

message SetDataRequest {
  string client_name = 1;
  string client_password = 2;
  bytes data = 3;
}

message SetDataResponse {
  string name = 1;
  int64 client_id = 2;
  int32 data_len = 3;
  int64 updated_at = 4;
  int64 download_counter = 5;
}

message GetPrivilegedDataRequest { string client_name = 1; }

service PrivilegedDataService {
  // Method to set app version, admin only
  rpc SetAppVersion(SetDataRequest) returns (SetDataResponse) {};
  // Method to set algo config, admin only
  rpc SetAlgoConfig(SetDataRequest) returns (SetDataResponse) {};
  // Method to set modes config, admin only
  rpc SetModesConfig(SetDataRequest) returns (SetDataResponse) {};
  // Method to set hashboard temps config, admin only
  rpc SetHashboardTempsConfig(SetDataRequest) returns (SetDataResponse) {};
  // Method to set chip temps config, admin only
  rpc SetChipTempsConfig(SetDataRequest) returns (SetDataResponse) {};
  // Method to set antminer ideal config, admin only
  rpc SetAntminerIdealConfig(SetDataRequest) returns (SetDataResponse) {};
  // Method to set antminer power config, admin only
  rpc SetAntminerPowerConfig(SetDataRequest) returns (SetDataResponse) {};

  // Method to get maps data, data = encoded Template struct with bincode
  rpc GetMapsData(GetPrivilegedDataRequest) returns (DataResponse);
  // Method to get clients data, data = json file
  rpc GetClientSettingsData(GetPrivilegedDataRequest) returns (DataResponse);
  // Method to get enterprise device data, data = csv file [mac,code,sn,url]
  rpc GetEnterpriseDeviceData(GetPrivilegedDataRequest) returns (DataResponse);
  // Method to set maps data, data = encoded Template struct with bincode
  rpc SetMapsData(SetDataRequest) returns (SetDataResponse);
  // Method to set clients data, data = json file
  rpc SetClientSettingsData(SetDataRequest) returns (SetDataResponse);
  // Method to set enterprise device data, data = csv file [mac,code,sn,url]
  rpc SetEnterpriseDeviceData(SetDataRequest) returns (SetDataResponse);
}